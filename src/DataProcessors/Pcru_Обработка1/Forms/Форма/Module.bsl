
&НаСервере
Процедура Команда1НаСервере()
	pcru_РегламентныеОперации.ЗагрузкаДокументовИзСтаройБазы();	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	Команда1НаСервере();
КонецПроцедуры

&НаСервере
Процедура Команда2НаСервере()
	pcru_РегламентныеОперации.ВосстановлениеЗатрат();	
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	Команда2НаСервере();
КонецПроцедуры

&НаСервере
Процедура Команда3НаСервере(ВидДокумента)
	ВидДокумента = Справочники.аДокументооборотВидыДокументов.НайтиПоНаименованию("Заявка на оплату");
КонецПроцедуры

&НаКлиенте
Процедура Команда3(Команда)
	
	
	
	ДанныеЗаполнения=Новый Структура("НаименованиеДокумента", "Новый 1");
	ВидДокумента = Неопределено;
	Команда3НаСервере(ВидДокумента);
	ДанныеЗаполнения.Вставить("ВидДокумента",ВидДокумента);
	ПараметрыФормы=Новый Структура("ЗначенияЗаполнения", ДанныеЗаполнения);
	
	
	
	
	ОткрытьФорму("Документ.аДокументооборотКорпоративныйДокумент.Форма.ФормаДокумента",ПараметрыФормы);
	
	//    ПолучитьФорму
	
	
КонецПроцедуры

&НаСервере
Процедура Реквизит1ОкончаниеПеретаскиванияНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Реквизит1ОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	Реквизит1ОкончаниеПеретаскиванияНаСервере();
	СтандартнаяОбработка  = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура Реквизит1ПроверкаПеретаскиванияНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Реквизит1ПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Реквизит1ПроверкаПеретаскиванияНаСервере();
	СтандартнаяОбработка  = Ложь;
КонецПроцедуры

&НаСервере
Процедура Реквизит1НачалоПеретаскиванияНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Реквизит1НачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	Реквизит1НачалоПеретаскиванияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПереносДанныхНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	аДокументооборотКорпоративныйДокумент.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.аДокументооборотКорпоративныйДокумент КАК аДокументооборотКорпоративныйДокумент";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка.пкру_РаспределениеЗатрат.Количество() > 0  Тогда
			
			Об =  Выборка.Ссылка.ПолучитьОбъект();
			Для каждого СтрокаРЗ Из Об.пкру_РаспределениеЗатрат Цикл
				КЦ = Справочники.пкру_CostCentr.НайтиПоКоду(СтрокаРЗ.пкру_CostCentr.Код);
				Если не ЗначениеЗаполнено(КЦ)  Тогда
				    НО = Справочники.пкру_CostCentr.СоздатьЭлемент();
					ЗаполнитьЗначенияСвойств(НО,СтрокаРЗ.пкру_CostCentr,,"Родитель,Владелец");
				    НО.Записать();
					КЦ = НО.Ссылка;
				КонецЕсли; 
				СтрокаРЗ.пкру_CostCentr1 = КЦ;
				
				СР = Справочники.пкру_СтатьиРасходов.НайтиПоКоду(СтрокаРЗ.пкру_СтатьяРасходов.Код);
				Если не ЗначениеЗаполнено(СР)  Тогда
				    НО = Справочники.пкру_СтатьиРасходов.СоздатьЭлемент();
					ЗаполнитьЗначенияСвойств(НО,СтрокаРЗ.пкру_СтатьяРасходов,,"Родитель,Владелец");
				    НО.Записать();
					СР = НО.Ссылка;
				КонецЕсли; 
				СтрокаРЗ.пкру_СтатьяРасходов1 = СР;
			КонецЦикла; 
			Об.Записать();
		КонецЕсли; 
		
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереносДанных(Команда)
	ПереносДанныхНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПереносДанных2НаСервере()
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	pcru_СогласованиеДокументов.Документ КАК Документ,
	//|	pcru_СогласованиеДокументов.БизнесПроцесс КАК БизнесПроцесс,
	//|	pcru_СогласованиеДокументов.Задача КАК Задача,
	//|	pcru_СогласованиеДокументов.Исполнитель КАК Исполнитель,
	//|	pcru_СогласованиеДокументов.ТекстовыйРезультат КАК ТекстовыйРезультат,
	//|	pcru_СогласованиеДокументов.Согласовано КАК Согласовано,
	//|	pcru_СогласованиеДокументов.ЦиклСогласования КАК ЦиклСогласования
	//|ИЗ
	//|	РегистрСведений.pcru_СогласованиеДокументов КАК pcru_СогласованиеДокументов";
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	    мз =  РегистрыСведений.pcru_СогласованиеДокументов.СоздатьМенеджерЗаписи();
	//		ЗаполнитьЗначенияСвойств(мз,Выборка);
	//        мз.Записать(Истина);
	//КонецЦикла;
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	pcru_ЗадачиПоДокументам.Документ КАК Документ,
|	pcru_ЗадачиПоДокументам.БизнесПроцесс КАК БизнесПроцесс,
|	pcru_ЗадачиПоДокументам.Исполнитель КАК Исполнитель,
|	pcru_ЗадачиПоДокументам.ПереадресованоДругому КАК ПереадресованоДругому,
|	pcru_ЗадачиПоДокументам.Переадресант КАК Переадресант,
|	pcru_ЗадачиПоДокументам.Инициатор КАК Инициатор,
|	pcru_ЗадачиПоДокументам.Порядок КАК Порядок,
|	pcru_ЗадачиПоДокументам.ДатаВыполненияФакт КАК ДатаВыполненияФакт,
|	pcru_ЗадачиПоДокументам.Согласовано КАК Согласовано,
|	pcru_ЗадачиПоДокументам.ТекстовыйРезультат КАК ТекстовыйРезультат,
|	pcru_ЗадачиПоДокументам.ПричинаПереадресации КАК ПричинаПереадресации
|ИЗ
|	РегистрСведений.pcru_ЗадачиПоДокументам КАК pcru_ЗадачиПоДокументам";
Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл

	    мз =  РегистрыСведений.pcru_ЗадачиПоДокументам.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(мз,Выборка);
	        мз.Записать(Истина);

КонецЦикла;
 	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереносДанных2(Команда)
	ПереносДанных2НаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ПриОткрытииНаСервере(Отказ);	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере(Отказ)
Отказ = не РольДоступна("Полные права");	
КонецПроцедуры

