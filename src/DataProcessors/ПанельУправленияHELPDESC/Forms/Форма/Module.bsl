
&НаСервере
Процедура ВыдатьРазрешениеНаСервере(Объект,ОбъектАвтор)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Pcru_РазрешениеНаредактированиеСрезПоследних.Период,
	|	Pcru_РазрешениеНаредактированиеСрезПоследних.Пользователь,
	|	Pcru_РазрешениеНаредактированиеСрезПоследних.Документ
	|ИЗ
	|	РегистрСведений.Pcru_РазрешениеНаредактирование.СрезПоследних(
	|			ДОБАВИТЬКДАТЕ(&Период, МИНУТА, -15),
	|			Пользователь = &Пользователь
	|				И Документ = &Документ) КАК Pcru_РазрешениеНаредактированиеСрезПоследних";
	Запрос.УстановитьПараметр("Период",ТекущаяДата());
	Запрос.УстановитьПараметр("Пользователь",ОбъектАвтор );
	Запрос.УстановитьПараметр("Документ",Объект );
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат;
	КонецЦикла;
	
	МЗ = РегистрыСведений.Pcru_РазрешениеНаредактирование.СоздатьМенеджерЗаписи();
	МЗ.Документ  = Объект;
	МЗ.Пользователь  =ОбъектАвтор;
	МЗ.Период = ТекущаяДата();
	МЗ.Записать(истина);
	
	pcru_ex_Почта.ОтправкаПочты(ОбъектАвтор,"Редактирование "+Объект,
	" Заявка на редактирование выполнена.
	| Вам разрешено редактировать "+Объект+" в течении 15 мин.
	| со времени: "+Строка(ТекущаяДата()));
КонецПроцедуры

&НаКлиенте
Процедура ВыдатьРазрешение(Команда)
	ВыдатьРазрешениеНаСервере(Элементы.СписокПроцессов.ТекущиеДанные.Объект,Элементы.СписокПроцессов.ТекущиеДанные.Автор);
	Элементы.Разрешения.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ЗапущенныеПроцессыПриАктивизацииСтроки(Элемент)
	Если Элементы.ЗапущенныеПроцессы.ТекущиеДанные <> Неопределено Тогда
		ЗапущенныеПроцессыПриАктивизацииСтрокиСРВ(Элементы.ЗапущенныеПроцессы.ТекущиеДанные.Ссылка);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗапущенныеПроцессыПриАктивизацииСтрокиСРВ(Ссылка)
	ЭтотОбъект.Задачи.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс",Ссылка );
	ЭтотОбъект.ЗадачиЗавершенные.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс",Ссылка );
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтотОбъект.Задачи.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс",БизнесПроцессы.аДокументооборотКорпоративныйБизнесПроцесс.ПустаяСсылка() );
	ЭтотОбъект.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	УстановитьПараметрыСписковЗадач();
КонецПроцедуры

&НаСервере
Процедура ЗавершитьРедактированиеНаСервере(Ссылка)
	РаботаСФайламиСлужебныйВызовСервера.ОсвободитьФайл(Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	Если Элементы.ЗахваченныеФайлы.ТекущиеДанные  <>  Неопределено Тогда
    	ЗавершитьРедактированиеНаСервере(Элементы.ЗахваченныеФайлы.ТекущиеДанные.Ссылка);
	    Элементы.ЗахваченныеФайлы.Обновить();
	КонецЕсли; 
	КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРегистрПараметрыЗадачНаСервере()
	////++ Севрюгин А.А
	
	ЗапросВН = Новый Запрос;
	ЗапросВН.Текст = "ВЫБРАТЬ
	|	аДокументооборотЗадача.Ссылка КАК Ссылка,
	|	pcru_ПараметрыВыданныхЗадач.Исполнитель КАК Исполнитель
	|ИЗ
	|	Задача.аДокументооборотЗадача КАК аДокументооборотЗадача
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.pcru_ПараметрыВыданныхЗадач КАК pcru_ПараметрыВыданныхЗадач
	|		ПО (pcru_ПараметрыВыданныхЗадач.Задача = аДокументооборотЗадача.Ссылка)
	|ГДЕ
	|	pcru_ПараметрыВыданныхЗадач.Исполнитель ЕСТЬ NULL
	|	И аДокументооборотЗадача.Исполнитель <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
	ВыборкаВН = ЗапросВН.Выполнить().Выбрать();
	Пока ВыборкаВН.Следующий() Цикл
		БылаЗамена = Ложь;
		ОбъектЗадача = ВыборкаВН.Ссылка;//.ПолучитьОбъект();
		//
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	аДокументооборотСсылкиПроцессов.Объект
		|ИЗ
		|	РегистрСведений.аДокументооборотСсылкиПроцессов КАК аДокументооборотСсылкиПроцессов
		|ГДЕ
		|	аДокументооборотСсылкиПроцессов.БизнесПроцесс = &БизнесПроцесс";
		Запрос.УстановитьПараметр("БизнесПроцесс",ОбъектЗадача.БизнесПроцесс );
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НЗ = РегистрыСведений.pcru_ПараметрыВыданныхЗадач.СоздатьНаборЗаписей();
			
			НЗ.Отбор.Задача.Установить( ОбъектЗадача.Ссылка);
			
			НЗ.Прочитать();
			
			Если НЗ.Количество() = 0 Тогда
				МЗ = Нз.Добавить();	
			Иначе
				МЗ = Нз[0];
			КонецЕсли; 
			
		
			МЗ.БизнесПроцесс =  ОбъектЗадача.БизнесПроцесс;
			
			МЗ.Документ = Выборка.Объект;
			
			МЗ.Задача =  ОбъектЗадача.Ссылка;
			
			МЗ.ТипЗадач = Перечисления.аГруппировкиЗадач.ЗадачиВРаботе;
			
			МЗ.Исполнитель = ОбъектЗадача.Исполнитель;
			
			Если  Выборка.Объект.КонтрагентыДоговоры.Количество() > 0 Тогда
				
				МЗ.ДоговорКонтрагента =  Выборка.Объект.КонтрагентыДоговоры[0].ДоговорКонтрагента;
				
				МЗ.Контрагент  =  Выборка.Объект.КонтрагентыДоговоры[0].Контрагент;
				
			КонецЕсли; 
			
			Если  Выборка.Объект.ОрганизацииПодразделения.Количество() > 0 Тогда
				
				МЗ.Подразделение  = Выборка.Объект.ОрганизацииПодразделения[0].Подразделение;
				
			КонецЕсли; 
			
			МЗ.Сумма =  Выборка.Объект.СуммаДокумента;
			
			МЗ.Инициатор   =  ОбъектЗадача.Автор;
			
			МЗ.Выполнена = ОбъектЗадача.Выполнена;
			
			Если ОбъектЗадача.Выполнена Тогда
				ЗапросРез = Новый Запрос;
				ЗапросРез.Текст = "ВЫБРАТЬ
				|	аДокументооборотРезультатыИсполнителейЗадачСрезПоследних.ПараметрРезультата.Наименование as Наименование,
				|	аДокументооборотРезультатыИсполнителейЗадачСрезПоследних.ЗначениеПараметра
				|ИЗ
				|	РегистрСведений.аДокументооборотРезультатыИсполнителейЗадач.СрезПоследних КАК аДокументооборотРезультатыИсполнителейЗадачСрезПоследних
				|ГДЕ
				|	аДокументооборотРезультатыИсполнителейЗадачСрезПоследних.Задача = &Задача";
				ЗапросРез.УстановитьПараметр("Задача",ОбъектЗадача );
				ВыборкаРез = ЗапросРез.Выполнить().Выбрать();
				Пока ВыборкаРез.Следующий() Цикл
					Если ВыборкаРез.Наименование = "Выбор кнопками панели" Тогда
						МЗ.Согласовано =   ВыборкаРез.ЗначениеПараметра;
					КонецЕсли;
					//
					Если ВыборкаРез.Наименование = "Текстовое сообщение" Тогда
						МЗ.ТекстовыйРезультат =   ВыборкаРез.ЗначениеПараметра;
					КонецЕсли;
				КонецЦикла;
			Иначе
				МЗ.Согласовано =   "Не выполнена";
				МЗ.ТекстовыйРезультат =   "Не выполнена";
			КонецЕсли; 
			
			Запрос1 = Новый Запрос;
			Запрос1.Текст = "ВЫБРАТЬ
			|	аДокументооборотСостояниеДокументов.СостояниеДокумента
			|ИЗ
			|	РегистрСведений.аДокументооборотСостояниеДокументов КАК аДокументооборотСостояниеДокументов
			|ГДЕ
			|	аДокументооборотСостояниеДокументов.КорпоративныйДокумент = &КорпоративныйДокумент";
			Запрос1.УстановитьПараметр("КорпоративныйДокумент",Выборка.Объект );
			Выборка1 = Запрос1.Выполнить().Выбрать();
			Пока Выборка1.Следующий() Цикл
				МЗ.СостояниеДокумента  =  Выборка1.СостояниеДокумента;
			КонецЦикла;
			
			МЗ.ДатаВыполненияПлан =    ОбъектЗадача.ДатаВыполненияПлан;
			
			МЗ.ДатаВыполненияФакт   =    ОбъектЗадача.ДатаВыполненияФакт;
			
				
			Попытка
				НЗ.Записать(Истина);
			Исключение
			КонецПопытки; 
			
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРегистрПараметрыЗадач(Команда)
	ЗаполнитьРегистрПараметрыЗадачНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьПроцессВТочку(Команда)
	ПараметрыФормы=Новый Структура("БизнесПроцесс", Элементы.ЗапущенныеПроцессы.ТекущиеДанные.Ссылка);
	ОткрытьФорму("БизнесПроцесс.аДокументооборотКорпоративныйБизнесПроцесс.Форма.ФормаПереходКТочке",ПараметрыФормы,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	УстановитьПараметрыСписковЗадач();
КонецПроцедуры


&НаСервере
Процедура УстановитьПараметрыСписковЗадач()
	
	ЭтаФорма.СписокПолученныеЗадачи.Параметры.УстановитьЗначениеПараметра("Пользователь", ЭтотОбъект.Пользователь);
	ЭтаФорма.СписокВыданныеЗадачи.Параметры.УстановитьЗначениеПараметра("Пользователь",  ЭтотОбъект.Пользователь);	
	
	ЗахваченныеФайлы.Параметры.УстановитьЗначениеПараметра("ВыбПользователь", ?(ЗначениеЗаполнено(ЭтотОбъект.Пользователь), ЭтотОбъект.Пользователь, NULL));
	
	ОТкрытыеФайлы.Параметры.УстановитьЗначениеПараметра("ВыбПользователь", ?(ЗначениеЗаполнено(ЭтотОбъект.Пользователь), ЭтотОбъект.Пользователь, NULL));
	

	
КонецПроцедуры

&НаКлиенте
Процедура Переадресовать(Команда)
	Если Элементы.СписокПолученныеЗадачи.ТекущиеДанные <> Неопределено Тогда
	ОткрытьФормуПереадресации(Элементы.СписокПолученныеЗадачи.ТекущиеДанные.зАДАЧА);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПереадресации(Ссылка)
	//откроем форму переадресации и переадресуем задачу
	
	ПараметрыФормы=Новый Структура;
	ПараметрыЗаполнения=Новый Структура;
	ПараметрыЗаполнения.Вставить("ИсходнаяЗадача", Ссылка);
	ПараметрыФормы.Вставить("ПараметрыЗаполнения", ПараметрыЗаполнения);
	
	ОткрытьФорму("Обработка.аДокументооборотПереадресацияЗадачи.Форма.ФормаПереадресации", ПараметрыФормы,,,,, Новый ОписаниеОповещения("ОткрытьФормуПереадресацииЗавершение", ЭтотОбъект),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПереадресацииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ИсходныйИсполнитель=ЭтотОбъект.Пользователь;
	
	Если Результат=Неопределено Тогда
		Возврат;
		
	КонецЕсли;
	
	Если ВыполнитьПереадресацию(Результат,Элементы.СписокПолученныеЗадачи.ТекущиеДанные.зАДАЧА) Тогда
		НовыйИсполнитель=Результат.НовыйИсполнитель;
		
		//добавим права доступа
		СписокИсполнителей=Новый СписокЗначений;
		СписокИсполнителей.Добавить(НовыйИсполнитель);
		аДОУправлениеДоступом.ЗаписатьРегистрПользователейОбъекта(Элементы.СписокПолученныеЗадачи.ТекущиеДанные.БизнесПроцесс, СписокИсполнителей, Элементы.СписокПолученныеЗадачи.ТекущиеДанные.зАДАЧА, Ложь);
		
		
		//добавим (при необходимости) исполнителей в список пользователей документа
		СписокДокументов=аДОКорпоративныеПроцессы.ПолучитьСписокСсылокПроцесса(Элементы.СписокПолученныеЗадачи.ТекущиеДанные.БизнесПроцесс, Ложь, Истина);
		Для Каждого ЭлементСписка Из СписокДокументов Цикл
			ДокументПроцесса=ЭлементСписка.Значение;
			аДОУправлениеДоступом.ЗаписатьРегистрПользователейОбъекта(ДокументПроцесса, СписокИсполнителей, Элементы.СписокПолученныеЗадачи.ТекущиеДанные.БизнесПроцесс);
		КонецЦикла;
		
		
	КонецЕсли;
	
	
	Элементы.Пользователь.Шрифт=Новый Шрифт(,,Истина);
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьПереадресацию(СтруктураРезультата,задачаСсылка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НовыйИсполнитель=СтруктураРезультата.НовыйИсполнитель;
	ТекстЗадачиИзменен=СтруктураРезультата.ТекстЗадачиИзменен;
	НовыйТекстЗадачи=СтруктураРезультата.НовыйТекстЗадачи;
	ДатаВыполненияПлан=СтруктураРезультата.ДатаВыполненияПлан;
	НаименованиеЗадачи=СтруктураРезультата.НаименованиеЗадачи;
	
	ИсходныйИсполнитель=ЭтотОбъект.Пользователь;
	
	ЗадачаОбъект = задачаСсылка.ПолучитьОбъект();
	//заменим данные в задаче
	ЗадачаОбъект.Исполнитель=НовыйИсполнитель;
	ЗадачаОбъект.ДатаВыполненияПлан=ДатаВыполненияПлан;
	ЗадачаОбъект.Наименование=НаименованиеЗадачи;
	Если ТекстЗадачиИзменен Тогда
		ТекстЗаданияФорматированный=Новый ФорматированныйДокумент;
		ТекстЗаданияФорматированный.УстановитьHTML(НовыйТекстЗадачи, Новый Структура);
		
	КонецЕсли;
	
	Попытка
		ЗадачаОбъект.Записать();
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат Ложь;
		
	КонецПопытки;
	
	//зафиксируем в регистре для последующего использования данной точке
	аДОЗадачиПроцессов.ЗафиксироватьЗаменуИсполнителяПереадресциейВТочке(ЗадачаОбъект.ТочкаКБП, ИсходныйИсполнитель, НовыйИсполнитель);
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СписокПроцессовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
	   ПоказатьЗначение(,Элемент.ТекущиеДанные.Объект);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УдалитьРазрешениеНаСервере(Пользователь)
	НЗ = РегистрыСведений.Pcru_РазрешениеНаредактирование.СоздатьНаборЗаписей();
	НЗ.Отбор.Пользователь.Установить(Пользователь, Истина);
	НЗ.Записать(истина);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьРазрешение(Команда)
	Если Элементы.Разрешения.ТекущиеДанные  <> Неопределено Тогда
	  УдалитьРазрешениеНаСервере(Элементы.Разрешения.ТекущиеДанные.Пользователь);
  КонецЕсли; 
  Элементы.Разрешения.Обновить();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере(Отказ)
	Отказ = НЕ РольДоступна("ПолныеПрава");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура Пользователь1ПриИзменении(Элемент)
	УстановитьПараметрыСписковЗадач();
КонецПроцедуры

&НаСервере
Процедура ЗавершитьПроблеммныеПроцессыНаСервере()
	Перем СписокТочекЗавершения, ТочкаЗавершения;
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	аДокументооборотКорпоративныйБизнесПроцесс.Ссылка КАК Ссылка
|ИЗ
|	БизнесПроцесс.аДокументооборотКорпоративныйБизнесПроцесс КАК аДокументооборотКорпоративныйБизнесПроцесс
|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|			аДокументооборотЗадача.БизнесПроцесс КАК БизнесПроцесс,
|			аДокументооборотЗадача.Ссылка КАК Ссылка
|		ИЗ
|			Задача.аДокументооборотЗадача КАК аДокументооборотЗадача
|		ГДЕ
|			НЕ аДокументооборотЗадача.БизнесПроцесс В
|						(ВЫБРАТЬ
|							аДокументооборотЗадача.БизнесПроцесс
|						ИЗ
|							Задача.аДокументооборотЗадача КАК аДокументооборотЗадача
|						ГДЕ
|							НЕ аДокументооборотЗадача.Выполнена
|							И НЕ аДокументооборотЗадача.Исполнитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
|			И аДокументооборотЗадача.Выполнена
|			И НЕ аДокументооборотЗадача.Исполнитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ВложенныйЗапрос
|		ПО аДокументооборотКорпоративныйБизнесПроцесс.Ссылка = ВложенныйЗапрос.БизнесПроцесс
|ГДЕ
|	аДокументооборотКорпоративныйБизнесПроцесс.Стартован
|	И НЕ аДокументооборотКорпоративныйБизнесПроцесс.Завершен
|	И аДокументооборотКорпоративныйБизнесПроцесс.ВидПроцесса.Наименование В (""Согласование договоров"", ""Согласование заявки на оплату"", ""Согласование Внутреннего Документа"")
|	И НЕ ВложенныйЗапрос.Ссылка ЕСТЬ NULL
|
|СГРУППИРОВАТЬ ПО
|	аДокументооборотКорпоративныйБизнесПроцесс.Ссылка";
Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл
    СписокТочекЗавершения=аДОСхемаКБПСервер.ПолучитьСписокТочекПоТипу(Выборка.Ссылка, ПредопределенноеЗначение("Перечисление.аВидыТочекБизнесПроцесса.Завершение"));
    ТочкаЗавершения=СписокТочекЗавершения[0].Значение;
    
    //выполним процесс в точке завершения
    аДОКорпоративныеПроцессы.ОбработатьМаршрутКБП(Выборка.Ссылка, ТочкаЗавершения);
    аДОКорпоративныеПроцессы.ОтменитьВыполнениеВсемНевыпоненнымТочкам(Выборка.Ссылка);
КонецЦикла;
 	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПроблеммныеПроцессы(Команда)
	ЗавершитьПроблеммныеПроцессыНаСервере();
КонецПроцедуры


