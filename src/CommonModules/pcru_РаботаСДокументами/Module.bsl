
Процедура pcru_ВыборФормыДокументаОбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	//Параметры.Ключ.ВидДокумента.Наименование
	Если Строка(Источник) = "ДокументМенеджер.аДокументооборотКорпоративныйДокумент" Тогда
	КонецЕсли;
КонецПроцедуры

Процедура pcru_ВыборФормыЗадачиОбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	Return;
	//Если Строка(Источник) = "ДокументМенеджер.аДокументооборотКорпоративныйДокумент" Тогда
	Если ВидФормы = "ФормаОбъекта" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	аДокументооборотСсылкиПроцессов.Объект,
		|	аДокументооборотСсылкиПроцессов.Объект.ВидДокумента.Наименование КАК Наименование
		|ИЗ
		|	РегистрСведений.аДокументооборотСсылкиПроцессов КАК аДокументооборотСсылкиПроцессов
		|ГДЕ
		|	аДокументооборотСсылкиПроцессов.БизнесПроцесс = &БизнесПроцесс";
		Запрос.УстановитьПараметр("БизнесПроцесс", Параметры.Ключ.БизнесПроцесс);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Наименование = "Заявка на оплату" Тогда
				ВыбраннаяФорма = "Задача.аДокументооборотЗадача.Форма.ФормаИсполнения1";  
				СтандартнаяОбработка = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		
		
		
		//НаименованиеВида =  "";
		//Если Параметры.Свойство("ЗначениеКопирования") Тогда
		// НаименованиеВида =  Параметры.ЗначениеКопирования.ВидДокумента.Наименование;
		//КонецЕсли; 
		//Если Параметры.Свойство("Ключ") Тогда
		//  НаименованиеВида =  Параметры.Ключ.ВидДокумента.Наименование;
		//КонецЕсли; 
		//Если НаименованиеВида = "Заявка на оплату" Тогда
		//	ВыбраннаяФорма = "Документ.аДокументооборотКорпоративныйДокумент.Форма.ФормаДокумента1";  
		//	СтандартнаяОбработка = Ложь;
		//КонецЕсли;
		//
		//Если НаименованиеВида = "Список задач для Глав Отделов" Тогда
		//	ВыбраннаяФорма = "Документ.аДокументооборотКорпоративныйДокумент.Форма.ФормаДокументаПоручение"; 
		//	СтандартнаяОбработка = Ложь;
		//КонецЕсли;
		//
		//Если НаименованиеВида = "Входящий" Тогда
		//	ВыбраннаяФорма = "Документ.аДокументооборотКорпоративныйДокумент.Форма.ФормаДокумента2"; 
		//	СтандартнаяОбработка = Ложь;
		//КонецЕсли;
	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

//Перезаполняет pcru_ЗадачиПоДокументам по Документу
Процедура pcru_ОбновитьЗадачи(Источник,БП = неопределено) Экспорт
	Заполнить_pcru_ЗадачиПоДокументам = ложь;
	Запрос = Новый Запрос;
	БизнесПроцесс  = неопределено;
	Если БП = неопределено Тогда
		М = ПолучитьМассивЗапущеныхБП(Источник);
		Если 				М .Количество() > 0 Тогда
			БизнесПроцесс           = М[0];
		КонецЕсли;
	Иначе
		БизнесПроцесс  = БП;
	КонецЕсли; 
	
	Попытка
		НЗ = РегистрыСведений.pcru_ЗадачиПоДокументам.СоздатьНаборЗаписей();
		НЗ.Отбор.Документ.Установить(Источник.Ссылка, Истина);
		НЗ.Прочитать();
		НЗ.Очистить();
		//	
		МассивПользователей = pcru_РаботаСДокументами.ПолучитьМассивПользователей(Источник.Ссылка);
		Порядок = 1;
		Для каждого СтрокаТЧ Из МассивПользователей Цикл
			СтрТЗ                    = НЗ.Добавить();
			СтрТЗ.Исполнитель        = СтрокаТЧ;
			СтрТЗ.Документ           = Источник.Ссылка;
			СтрТЗ.БизнесПроцесс      = БизнесПроцесс;
			СтрТЗ.Порядок  = Порядок;
			Если БизнесПроцесс  = неопределено Тогда
				СтрТЗ.Согласовано        = "Не запущено";
				СтрТЗ.ТекстовыйРезультат = "Не запущено";
				СтрТЗ.ПереадресованоДругому = Ложь;
				СтрТЗ.Переадресант = неопределено;
				СтрТЗ.ПричинаПереадресации = "";
			Иначе
				ЗапросЗамена = Новый Запрос;
				ЗапросЗамена.Текст = "ВЫБРАТЬ
				|	аДокументооборотЗаменыИсполнителейВТочекПроцесса.ИсходныйИсполнитель,
				|	аДокументооборотЗаменыИсполнителейВТочекПроцесса.ДействующийИсполнитель
				|ИЗ
				|	РегистрСведений.аДокументооборотЗаменыИсполнителейВТочекПроцесса КАК аДокументооборотЗаменыИсполнителейВТочекПроцесса
				|ГДЕ
				|	аДокументооборотЗаменыИсполнителейВТочекПроцесса.БизнесПроцесс = &БизнесПроцесс
				|	И аДокументооборотЗаменыИсполнителейВТочекПроцесса.ИсходныйИсполнитель = &ИсходныйИсполнитель";
				ЗапросЗамена.УстановитьПараметр("БизнесПроцесс",БизнесПроцесс);
				ЗапросЗамена.УстановитьПараметр("ИсходныйИсполнитель",СтрокаТЧ);
				ВыборкаЗамена = ЗапросЗамена.Выполнить().Выбрать();
				Если ВыборкаЗамена.Следующий() Тогда
					СтрТЗ.ПереадресованоДругому  = Истина;
					СтрТЗ.Переадресант  = ВыборкаЗамена.ДействующийИсполнитель;
					
					Запрос1 = Новый Запрос;
					Запрос1.Текст = "ВЫБРАТЬ
					|	аДокументооборотМатрицаЗаместителейСрезПоследних.ПричинаЗамены
					|ИЗ
					|	РегистрСведений.аДокументооборотМатрицаЗаместителей.СрезПоследних КАК аДокументооборотМатрицаЗаместителейСрезПоследних
					|ГДЕ
					|	аДокументооборотМатрицаЗаместителейСрезПоследних.ЗамещаемыйСотрудник = &ЗамещаемыйСотрудник";
					Запрос1.УстановитьПараметр("ЗамещаемыйСотрудник",СтрокаТЧ);
					Выборка1 = Запрос1.Выполнить().Выбрать();
					Если Выборка1.Следующий()  Тогда
						СтрТЗ.Согласовано =  Выборка1.ПричинаЗамены ;
						СтрТЗ.ТекстовыйРезультат =   "Заместитель " + ВыборкаЗамена.ДействующийИсполнитель;
						СтрТЗ.ПричинаПереадресации  =  Выборка1.ПричинаЗамены;
					Иначе
						СтрТЗ.Согласовано =  "Переадресовано";
						СтрТЗ.ТекстовыйРезультат =   ВыборкаЗамена.ДействующийИсполнитель;
						СтрТЗ.ПричинаПереадресации  =  "Перенаправлено исполнителем " + СтрокаТЧ;
					КонецЕсли;
				Иначе
					СтрТЗ.Согласовано        = "Не выдано";
					СтрТЗ.ТекстовыйРезультат = "Не выдано";
				КонецЕсли;
			КонецЕсли;
			Порядок = Порядок + 1;
			
		КонецЦикла; 
		НЗ.Записать(ИСТИНА);
	Исключение
		Возврат;
	КонецПопытки; 
	
КонецПроцедуры

//Перезаполняет pcru_ПараметрыВыданныхЗадач по Документу
Процедура pcru_ОбновитьВыданныеЗадачи(Источник) Экспорт
	
	
	Попытка
		НЗ = РегистрыСведений.pcru_ПараметрыВыданныхЗадач.СоздатьНаборЗаписей();
		НЗ.Отбор.Документ.Установить(Источник, Истина);
		НЗ.Прочитать();
		НЗ.Очистить();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	аДокументооборотЗадача.Ссылка как Задача,
		|	аДокументооборотСсылкиПроцессов.БизнесПроцесс,
		|	аДокументооборотЗадача.Исполнитель
		|ИЗ
		|	РегистрСведений.аДокументооборотСсылкиПроцессов КАК аДокументооборотСсылкиПроцессов
		|		ПОЛНОЕ СОЕДИНЕНИЕ Задача.аДокументооборотЗадача КАК аДокументооборотЗадача
		|		ПО аДокументооборотСсылкиПроцессов.БизнесПроцесс = аДокументооборотЗадача.БизнесПроцесс
		|ГДЕ
		|	аДокументооборотСсылкиПроцессов.Объект = &Объект
		//|	И аДокументооборотСсылкиПроцессов.БизнесПроцесс.Завершен = ЛОЖЬ
		|	И аДокументооборотСсылкиПроцессов.БизнесПроцесс.Стартован = ИСТИНА";
		Запрос.УстановитьПараметр("Объект", Источник);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если не ЗначениеЗаполнено(Выборка.Исполнитель)  Тогда
				Продолжить;
			КонецЕсли; 
			
			Запись = НЗ.Добавить();
			Запись.БизнесПроцесс =  Выборка.Задача.БизнесПроцесс;
			
			Запись.ВидБизнесПроцесса =  Выборка.БизнесПроцесс.ВидПроцесса;
			
			Запись.Документ = Источник;
			
			Запись.Задача =  Выборка.Задача;
			
			Запись.Исполнитель = Выборка.Исполнитель;
			
			Если  Источник.КонтрагентыДоговоры.Количество() > 0 Тогда
				
				Запись.ДоговорКонтрагента =  Источник.КонтрагентыДоговоры[0].ДоговорКонтрагента;
				
				Запись.Контрагент  =  Источник.КонтрагентыДоговоры[0].Контрагент;
				
			КонецЕсли; 
			
			Если  Источник.ОрганизацииПодразделения.Количество() > 0 Тогда
				
				Запись.Подразделение  = Источник.ОрганизацииПодразделения[0].Подразделение;
				
			КонецЕсли; 
			
			Запись.Сумма =  Источник.СуммаДокумента;
			
			Запись.Инициатор   =  Выборка.Задача.Автор;
			
			Запись.Выполнена = Выборка.Задача.Выполнена;
			//
			Запрос1 = Новый Запрос;
			Запрос1.Текст = "ВЫБРАТЬ
			|	аДокументооборотСостояниеДокументов.СостояниеДокумента
			|ИЗ
			|	РегистрСведений.аДокументооборотСостояниеДокументов КАК аДокументооборотСостояниеДокументов
			|ГДЕ
			|	аДокументооборотСостояниеДокументов.КорпоративныйДокумент = &КорпоративныйДокумент";
			Запрос1.УстановитьПараметр("КорпоративныйДокумент",Источник );
			Выборка1 = Запрос1.Выполнить().Выбрать();
			Пока Выборка1.Следующий() Цикл
				Запись.СостояниеДокумента  =  Выборка1.СостояниеДокумента;
			КонецЦикла;
			
			Запись.ДатаВыполненияПлан =    Выборка.Задача.ДатаВыполненияПлан;
			
			Если Выборка.Задача.Выполнена Тогда
				ЗапросРез = Новый Запрос;
				ЗапросРез.Текст = "ВЫБРАТЬ
				|	аДокументооборотРезультатыИсполнителейЗадачСрезПоследних.ПараметрРезультата.Наименование as Наименование,
				|	аДокументооборотРезультатыИсполнителейЗадачСрезПоследних.ЗначениеПараметра
				|ИЗ
				|	РегистрСведений.аДокументооборотРезультатыИсполнителейЗадач.СрезПоследних КАК аДокументооборотРезультатыИсполнителейЗадачСрезПоследних
				|ГДЕ
				|	аДокументооборотРезультатыИсполнителейЗадачСрезПоследних.Задача = &Задача";
				ЗапросРез.УстановитьПараметр("Задача",Выборка.Задача );
				ВыборкаРез = ЗапросРез.Выполнить().Выбрать();
				Пока ВыборкаРез.Следующий() Цикл
					Если ВыборкаРез.Наименование = "Выбор кнопками панели" Тогда
						Запись.Согласовано =   ВыборкаРез.ЗначениеПараметра;
					КонецЕсли;
					//
					Если ВыборкаРез.Наименование = "Текстовое сообщение" Тогда
						Запись.ТекстовыйРезультат =   ВыборкаРез.ЗначениеПараметра;
					КонецЕсли;
				КонецЦикла;
				Запись.ТипЗадач = Перечисления.аГруппировкиЗадач.ВыполненныеЗадачи;
				Запись.ДатаВыполненияФакт   =    Выборка.Задача.ДатаВыполненияФакт;
				//
			Иначе
				Запись.Согласовано =   "Не выполнена";
				Запись.ТипЗадач = Перечисления.аГруппировкиЗадач.НаходятсяВРаботе;
				Запись.ТекстовыйРезультат =   "Не выполнена";
				//
			КонецЕсли; 
			
		КонецЦикла;
		
		
		
		НЗ.Записать(Истина);
	Исключение
		Возврат;
	КонецПопытки; 
КонецПроцедуры

// возвращает запущенные и не завершенные БП по документу
//
// Параметры:
//  Источник  - аДокументооборотКорпоративныйДокумент
//
// Возвращаемое значение:
//   Массив   - Массив из аДокументооборотКорпоративныйБизнесПроцесс
//
Функция ПолучитьМассивЗапущеныхБП(Источник) Экспорт
	Массив = Новый Массив;                  
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	аДокументооборотСсылкиПроцессов.БизнесПроцесс
	|ИЗ
	|	РегистрСведений.аДокументооборотСсылкиПроцессов КАК аДокументооборотСсылкиПроцессов
	|ГДЕ
	|	аДокументооборотСсылкиПроцессов.Объект = &Объект
	|	И НЕ аДокументооборотСсылкиПроцессов.БизнесПроцесс.Завершен";
	Запрос.УстановитьПараметр("Объект",Источник.Ссылка );
	Выборка = Запрос.Выполнить().Выбрать();
	НужноЧистить = Истина;
	Пока Выборка.Следующий() Цикл
		Массив.Добавить(Выборка.БизнесПроцесс);
	КонецЦикла;
	Возврат Массив;
КонецФункции // ПолучитьМассивЗапущеныхБП()


// Возвращает  предполагаемых пользователей Документа
//
// Параметры:
//  ДокументОбъект  - Документы.аДокументооборотКорпоративныйДокумент.Ссылка
//
// Возвращаемое значение:
//   Массив   -  Массив элементов типа Справочники.Пользователи.Ссылка
Функция ПолучитьМассивПользователей(ДокументОбъект) Экспорт
	МассивПользователей = Новый Массив;
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Исполнитель",,"Исполнитель");
	#Область ЗНО
	Если ДокументОбъект.ВидДокумента.Наименование = "Заявка на оплату" Тогда
		Если ДокументОбъект.СписокПолучателей.Количество()>0 Тогда
			Для каждого СтрСпП Из ДокументОбъект.СписокПолучателей Цикл
				Если МассивПользователей.Найти(СтрСпП.Получатель) = Неопределено Тогда 
					МассивПользователей.Добавить(СтрСпП.Получатель);
				КонецЕсли; 
			КонецЦикла; 
		Иначе	
			//Office coordinator
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"13112") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1312") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1313") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1314") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1315") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1316") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1319") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1321") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1322") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1323") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1324") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1325") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1331") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1332") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1333") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1334") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1361") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1362") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1363") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1364") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1365") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1381") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1382") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1383") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1385") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1394") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1396") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1397") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1404") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1411") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1412") > 0 Тогда
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Sergey V. Ivanov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
				КонецЕсли;  	
			КонецЦикла;
			//CEO's assistant
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если  СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1341") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1342") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1343") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1386") > 0 Тогда
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Daria I. Gorodetskaya");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					
				КонецЕсли; 
			КонецЦикла; 	
			AddCEO = False;
			Если  ДокументОбъект.СуммаДокумента>=250000 Тогда
				AddCEO = Истина;
			КонецЕсли; 
			//2.00.00
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.00.00") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Daria I. Gorodetskaya");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					AddCEO = Истина;
				КонецЕсли;  
			КонецЦикла; 
			AddCM = False; 
			//2.00.01
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.00.01") > 0 Тогда
					AddCM = Истина; 
				КонецЕсли;  
			КонецЦикла; 
			//
			//	//2.01.00
			//Для каждого РаспределениеЗатрат Из СписокОбъектов[0].Значение.пкру_РаспределениеЗатрат Цикл
			//	Возврат СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.01.00") > 0;
			//КонецЦикла; 	
			//2.02
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.02") > 0 Тогда
					Если  ДокументОбъект.СуммаДокумента<300000 Тогда
						Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Stanislav U. Nikitin");
						Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
							МассивПользователей.Добавить(Исполнитель);
						КонецЕсли;
					КонецЕсли; 
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Dmitriy Kopunov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
				КонецЕсли;  
			КонецЦикла; 
			//HoIT
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"13113") > 0
					или  СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1317") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1392") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"13921") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"13922") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"13923") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1393") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1398") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Dmitriy Kopunov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					
				КонецЕсли;  
			КонецЦикла; 	
			//2.03.00
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.03.00") > 0 Тогда
					//			СтрТЗ = 	НЗ.Добавить(); 			СтрТЗ.Документ =  ДокументОбъект; 			СтрТЗ.Согласовано = "Согласование не запущено"; 			СтрТЗ.ТекстовыйРезультат = "Согласование не запущено"; 
					//Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Ludmila Ischenko");
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Viktor Gaibadullin");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					
				КонецЕсли; 
			КонецЦикла; 	
			//HoHR
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1114") > 0 
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1115") > 0 
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1117") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1118") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1121") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1121") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1122") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1123") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1124") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1128") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1129") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1131") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1132") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1133") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1134") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1135") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1141") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1142") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1143") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1384") > 0
					or СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1406") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Viktor Gaibadullin");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли; 
					
				КонецЕсли;  
			КонецЦикла; 	
			//2.10.00
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.10.00") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Artem V. Oleynikov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;  
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Ilshat Fakhritdinov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					AddCM = Истина;
				КонецЕсли;  
			КонецЦикла; 
			//2.05
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.05") > 0 Тогда
					//Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1214") > 0 Тогда
					//				СтрТЗ = 	НЗ.Добавить(); 			СтрТЗ.Документ =  ДокументОбъект; 			СтрТЗ.Согласовано = "Согласование не запущено"; 			СтрТЗ.ТекстовыйРезультат = "Согласование не запущено"; 
					//	Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Elena E. Ivanova");
					//Иначе
					
					//Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Natalya Leykovskaya");
					//КонецЕсли;
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Ilshat Fakhritdinov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					AddCM = Истина;
				КонецЕсли;	
			КонецЦикла; 	
			// HoSD
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1214") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"12141") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"12142") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"12143") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1318") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Ilshat Fakhritdinov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					AddCM = Истина;
				КонецЕсли;
			КонецЦикла; 	
			//2.07  			//2.11.02
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.07") > 0 или СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.11.02") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Aleksey Volkovnichenko");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
				КонецЕсли; 
			КонецЦикла; 
			//2.07  			
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.08.00") > 0  Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Irina M. Glushchenya");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Bogdan O. Chekomasov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					
					AddCM = Истина;
				КонецЕсли; 
			КонецЦикла; 
			//2.11.01
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если  СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.11.01") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Aleksandr A. Demidenko");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Bogdan O. Chekomasov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					
					AddCM = Истина;
				КонецЕсли; 
			КонецЦикла; 
			// HoMKT
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1211") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"12111") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"12112") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"12113") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"12114") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"12115") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"12116") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"12117") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1212") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1213") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1215") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1216") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1217") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1221") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1222") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1405") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Bogdan O. Chekomasov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					
				КонецЕсли;	
			КонецЦикла; 	
			//2.09
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.09") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Yulia Yaroshenko");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Bogdan O. Chekomasov");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					AddCM = Истина;
				КонецЕсли;  
			КонецЦикла; 
			//	//2.13.00
			//	Для каждого РаспределениеЗатрат Из СписокОбъектов[0].Значение.пкру_РаспределениеЗатрат Цикл
			//		Возврат СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.13.00") > 0;
			//	КонецЦикла; 
			//Возврат Ложь;
			//2.16
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если  СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.16") > 0 Тогда
					//			СтрТЗ = 	НЗ.Добавить(); 			СтрТЗ.Документ =  ДокументОбъект; 			СтрТЗ.Согласовано = "Согласование не запущено"; 			СтрТЗ.ТекстовыйРезультат = "Согласование не запущено"; 
					//Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Dmitriy Y. Mishukov");
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Margarita V. Petukhova");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					AddCM = Истина;
				КонецЕсли;
			КонецЦикла; 
			//2.14.00
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.14.00") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Margarita V. Petukhova");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
					AddCM = Истина;
				КонецЕсли;  
			КонецЦикла; 
			//HoRD
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1395") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Margarita V. Petukhova");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
				КонецЕсли;  
			КонецЦикла; 
			//2.04.00
			//HoIC&LSD
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1371") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1372") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1375") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1379") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1399") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1408") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1409") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1441") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1442") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_CostCentr,"2.04.00") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Yuriy Mamulin");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла; 	
			//Chief accountant
			Для каждого РаспределениеЗатрат Из ДокументОбъект.пкру_РаспределениеЗатрат Цикл
				Если СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1401") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"14010") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"14012") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"14013") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1402") > 0
					или СтрЧислоВхождений(РаспределениеЗатрат.пкру_СтатьяРасходов,"1403") > 0 Тогда
					
					Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Irina Matveenko");
					Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
						МассивПользователей.Добавить(Исполнитель);
					КонецЕсли;
				КонецЕсли; 
			КонецЦикла; 	
			//
			Если AddCM Тогда
				СтрТЗ             = ТаблицаЗначений.Добавить();
				Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Bogdan O. Chekomasov");
				Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
					МассивПользователей.Добавить(Исполнитель);
				КонецЕсли;
				
			КонецЕсли;
			//CFO
			СтрТЗ              = ТаблицаЗначений.Добавить();
			Исполнитель  = Справочники.Пользователи.НайтиПоНаименованию("Irina Efimova");
			Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
				МассивПользователей.Добавить(Исполнитель);
			КонецЕсли;
			//
			Если AddCEO Тогда
				СтрТЗ             = ТаблицаЗначений.Добавить();
				Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Oleg Venediktov");
				Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
					МассивПользователей.Добавить(Исполнитель);
				КонецЕсли;
			КонецЕсли;
			//
			СтрТЗ              = ТаблицаЗначений.Добавить();
			Исполнитель  = Справочники.Пользователи.НайтиПоНаименованию("Mariya O. Chumakova");
			Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
				МассивПользователей.Добавить(Исполнитель);
			КонецЕсли;
			
		КонецЕсли; 
		//
	КонецЕсли; 
	#КонецОбласти
	//
	#Область Договор_контрагента
	Если ДокументОбъект.ВидДокумента.Наименование = "Входящий" Тогда
		Если ЗначениеЗаполнено(ДокументОбъект.ОсновноеПодразделение.Руководитель)  Тогда
			Исполнитель                                     = ДокументОбъект.ОсновноеПодразделение.Руководитель;
			Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
				МассивПользователей.Добавить(Исполнитель);
			КонецЕсли;
		КонецЕсли;
		Для каждого СтрокаПроизвольнойТаблицы Из ДокументОбъект.ПроизвольнаяТаблица Цикл
			Если ТипЗнч(СтрокаПроизвольнойТаблицы.КолонкаСсылка1) = Тип("СправочникСсылка.Подразделения") Тогда
				Исполнитель                                    = СтрокаПроизвольнойТаблицы.КолонкаСсылка1.Руководитель;
				Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
					МассивПользователей.Добавить(Исполнитель);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Исполнитель                                      = Справочники.Пользователи.НайтиПоНаименованию("Yuriy Mamulin");
		Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
			МассивПользователей.Добавить(Исполнитель);
		КонецЕсли;//
		Исполнитель                                      = Справочники.Пользователи.НайтиПоНаименованию("Irina Efimova");
		Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
			МассивПользователей.Добавить(Исполнитель);
		КонецЕсли;
		//
		Исполнитель                                      = Справочники.Пользователи.НайтиПоНаименованию("Daria I. Gorodetskaya");
		Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
			МассивПользователей.Добавить(Исполнитель);
		КонецЕсли;
		//
		Исполнитель                                      = Справочники.Пользователи.НайтиПоНаименованию("Oleg Venediktov");
		Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
			МассивПользователей.Добавить(Исполнитель);
		КонецЕсли;
	КонецЕсли; 
	#КонецОбласти
	//
	#Область Процедура_Приказ_Директива
	Если ДокументОбъект.ВидДокумента.Наименование = "Процедура" 
		или ДокументОбъект.ВидДокумента.Наименование = "Приказ" 
		или ДокументОбъект.ВидДокумента.Наименование = "Директива" Тогда
		//
		Исполнитель = Справочники.Пользователи.НайтиПоНаименованию("Yulia Yaroshenko");
		Если МассивПользователей.Найти(Исполнитель) = Неопределено Тогда 
			МассивПользователей.Добавить(Исполнитель);
		КонецЕсли;
		//	 
	КонецЕсли; 
	#КонецОбласти
	//
	Возврат МассивПользователей; 
	
КонецФункции // ()


// Закрывает все файлы текущего пользователя
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ЗакрытьВсеФайлы(Пользователь = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ ЗначениеЗаполнено(Пользователь) Тогда
		Пользователь  = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Файлы.Ссылка
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	Файлы.Редактирует = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь",Пользователь );
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РаботаСФайламиСлужебныйВызовСервера.ОсвободитьФайл(Выборка.Ссылка);
	КонецЦикла;
	
	
	НЗ = РегистрыСведений.аДокументооборотОткрытыеОбъекты.СоздатьНаборЗаписей();
	НЗ.Отбор.Пользователь.Установить(Пользователь, Истина);
	НЗ.Прочитать();
	НЗ.Очистить();
	
КонецПроцедуры // ЗакрытьВсеФайлы()


// Возвращает параметры открытия формы  для процедуры  ОткрытьФорму("ОбщаяФорма.", ПараметрыФормы)
//
// Параметры:
//  ВидДокументаТекст  - Строка - Наименование вида документа.
//
// Возвращаемое значение:
//   Структура   - Параметры формы. Ключ структуры - имя параметра, а значение - значение параметра формы. 
//   Имя элемента должно совпадать с именем параметра структуры.
Функция ПолучитьПараметрыОткрытияФормы(ВидДокументаТекст)Экспорт

	ДанныеЗаполнения = Новый Структура("НаименованиеДокумента", "Новый "+ВидДокументаТекст);
	ВидДокумента = Справочники.аДокументооборотВидыДокументов.НайтиПоНаименованию(ВидДокументаТекст);
	ДанныеЗаполнения.Вставить("ВидДокумента",ВидДокумента);
	
	ПараметрыФормы=Новый Структура("ЗначенияЗаполнения", ДанныеЗаполнения);
	
	Возврат ПараметрыФормы;               
 

КонецФункции // ()



Процедура ОсвободитьРедактируемыеФайлы(Ссылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	аДокументооборотКорпоративныйДокументСсылкиНаФайлы.Файл
	|ИЗ
	|	Документ.аДокументооборотКорпоративныйДокумент.СсылкиНаФайлы КАК аДокументооборотКорпоративныйДокументСсылкиНаФайлы
	|ГДЕ
	|	аДокументооборотКорпоративныйДокументСсылкиНаФайлы.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Ссылка );
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Файл.Редактирует)  Тогда
			РаботаСФайламиСлужебныйВызовСервера.ОсвободитьФайл(Выборка.Файл);
		КонецЕсли;  
	КонецЦикла;
КонецПроцедуры
