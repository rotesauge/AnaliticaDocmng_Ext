
//&НаСервере
//Функция PCRU_УстановитьТекстЗапросаПоСтруктуреОтборов(СтруктураОтборов)
//	//проверим, нет ли в структуре отбора работающего по критерию отбора (потребуется другой текст запроса)
//	НазваниеКритерияОтбора="";
//	Для Каждого ЭлементСтруктуры Из СтруктураОтборов Цикл
//		ИмяОтбора=ЭлементСтруктуры.Ключ;
//		Если Найти(ИмяОтбора, "Критерий")>0 Тогда
//			НазваниеКритерияОтбора=СтрЗаменить(ИмяОтбора, "Критерий", "");
//			Прервать;
//		КонецЕсли;
//	КонецЦикла;
//	//
//	Если НазваниеКритерияОтбора="" Тогда
//		//обычный запрос
//		ТекстЗапроса="ВЫБРАТЬ 
//		|	аДокументооборотКорпоративныйДокумент.Ссылка,
//		|	аДокументооборотКорпоративныйДокумент.ПометкаУдаления,
//		|	аДокументооборотКорпоративныйДокумент.Номер,
//		|	аДокументооборотКорпоративныйДокумент.РегистрационныйНомер,
//		|	аДокументооборотКорпоративныйДокумент.ДатаРегистрации,
//		|	аДокументооборотКорпоративныйДокумент.ТипДокумента,
//		|	аДокументооборотКорпоративныйДокумент.Дата,
//		|	аДокументооборотКорпоративныйДокумент.Проведен,
//		|	аДокументооборотКорпоративныйДокумент.Автор,
//		|	аДокументооборотКорпоративныйДокумент.ВажностьДокумента,
//		|	аДокументооборотКорпоративныйДокумент.ВидДокумента,
//		|	аДокументооборотКорпоративныйДокумент.НаименованиеДокумента,
//		|	аДокументооборотКорпоративныйДокумент.ОсновнойКонтрагент,
//		|	аДокументооборотКорпоративныйДокумент.ОсновнаяОрганизация,
//		|	аДокументооборотКорпоративныйДокумент.ОсновноеПодразделение,
//		|	аДокументооборотКорпоративныйДокумент.ОсновнойПроект,
//		|	аДокументооборотКорпоративныйДокумент.ОсновноеКонтактноеЛицоКонтрагента,
//		|	аДокументооборотКорпоративныйДокумент.СуммаДокумента,
//		|	аДокументооборотКорпоративныйДокумент.Комментарий,
//		|	Pcru_ТекущийИсполнительПоДокументу.ТекущийИсполнитель КАК СотрудникРегистратор,
//		|	аДокументооборотСостояниеДокументов.СостояниеДокумента КАК СостояниеДокумента
//		|ИЗ
//		|	Документ.аДокументооборотКорпоративныйДокумент КАК аДокументооборотКорпоративныйДокумент
//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Pcru_ТекущийИсполнительПоДокументу КАК Pcru_ТекущийИсполнительПоДокументу
//		|     ПО Pcru_ТекущийИсполнительПоДокументу.Документ = аДокументооборотКорпоративныйДокумент.Ссылка
//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.аДокументооборотСостояниеДокументов КАК аДокументооборотСостояниеДокументов
//		|		ПО (аДокументооборотСостояниеДокументов.КорпоративныйДокумент = аДокументооборотКорпоративныйДокумент.Ссылка)
//		|ГДЕ";
//		//ИначеЕсли НазваниеКритерияОтбора="РабочиеГруппы" Тогда
//		//	//нестандартный критерий, отбор будет по пользователям входящим в рабочие группы
//	Иначе
//		//простой запрос по критерию
//		//ТекстЗапроса="ВЫБРАТЬ РАЗРЕШЕННЫЕ
//		//|	аДокументооборотКорпоративныйДокумент.Ссылка,
//		//|	аДокументооборотКорпоративныйДокумент.ПометкаУдаления,
//		//|	аДокументооборотКорпоративныйДокумент.Номер,
//		//|	аДокументооборотКорпоративныйДокумент.РегистрационныйНомер,
//		//|	аДокументооборотКорпоративныйДокумент.ДатаРегистрации,
//		//|	аДокументооборотКорпоративныйДокумент.ТипДокумента,
//		//|	аДокументооборотКорпоративныйДокумент.Дата,
//		//|	аДокументооборотКорпоративныйДокумент.Проведен,
//		//|	аДокументооборотКорпоративныйДокумент.Автор,
//		//|	аДокументооборотКорпоративныйДокумент.ВажностьДокумента,
//		//|	аДокументооборотКорпоративныйДокумент.ВидДокумента,
//		//|	аДокументооборотКорпоративныйДокумент.НаименованиеДокумента,
//		//|	аДокументооборотКорпоративныйДокумент.ОсновнойКонтрагент,
//		//|	аДокументооборотКорпоративныйДокумент.ОсновнаяОрганизация,
//		//|	аДокументооборотКорпоративныйДокумент.ОсновноеПодразделение,
//		//|	аДокументооборотКорпоративныйДокумент.ОсновнойПроект,
//		//|	аДокументооборотКорпоративныйДокумент.ОсновноеКонтактноеЛицоКонтрагента,
//		//|	аДокументооборотКорпоративныйДокумент.СуммаДокумента,
//		//|	аДокументооборотКорпоративныйДокумент.Комментарий,
//		//|   Pcru_ТекущийИсполнительПоДокументу.ТекущийИсполнитель как СотрудникРегистратор,
//		//|	аДокументооборотСостояниеДокументов.СостояниеДокумента КАК СостояниеДокумента
//		//|ИЗ
//		//|	КритерийОтбора."+НазваниеКритерияОтбора+"(&ЗначениеКритерияОтбора) КАК ТаблицаКритерия
//		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.аДокументооборотКорпоративныйДокумент КАК аДокументооборотКорпоративныйДокумент
//		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Pcru_ТекущийИсполнительПоДокументу КАК Pcru_ТекущийИсполнительПоДокументу
//		//|     ПО Pcru_ТекущийИсполнительПоДокументу.Документ = аДокументооборотКорпоративныйДокумент.Ссылка
//		//|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.аДокументооборотСостояниеДокументов КАК аДокументооборотСостояниеДокументов
//		//|			ПО аДокументооборотСостояниеДокументов.КорпоративныйДокумент = аДокументооборотКорпоративныйДокумент.Ссылка
//		//|		ПО ТаблицаКритерия.Ссылка = аДокументооборотКорпоративныйДокумент.Ссылка
//		//|ГДЕ";
//		
//		
//		ТекстЗапроса="ВЫБРАТЬ 
//		|	аДокументооборотКорпоративныйДокумент.Ссылка,
//		|	аДокументооборотКорпоративныйДокумент.ПометкаУдаления,
//		|	аДокументооборотКорпоративныйДокумент.Номер,
//		|	аДокументооборотКорпоративныйДокумент.РегистрационныйНомер,
//		|	аДокументооборотКорпоративныйДокумент.ДатаРегистрации,
//		|	аДокументооборотКорпоративныйДокумент.ТипДокумента,
//		|	аДокументооборотКорпоративныйДокумент.Дата,
//		|	аДокументооборотКорпоративныйДокумент.Проведен,
//		|	аДокументооборотКорпоративныйДокумент.Автор,
//		|	аДокументооборотКорпоративныйДокумент.ВажностьДокумента,
//		|	аДокументооборотКорпоративныйДокумент.ВидДокумента,
//		|	аДокументооборотКорпоративныйДокумент.НаименованиеДокумента,
//		|	аДокументооборотКорпоративныйДокумент.ОсновнойКонтрагент,
//		|	аДокументооборотКорпоративныйДокумент.ОсновнаяОрганизация,
//		|	аДокументооборотКорпоративныйДокумент.ОсновноеПодразделение,
//		|	аДокументооборотКорпоративныйДокумент.ОсновнойПроект,
//		|	аДокументооборотКорпоративныйДокумент.ОсновноеКонтактноеЛицоКонтрагента,
//		|	аДокументооборотКорпоративныйДокумент.СуммаДокумента,
//		|	аДокументооборотКорпоративныйДокумент.Комментарий,
//		|	Pcru_ТекущийИсполнительПоДокументу.ТекущийИсполнитель КАК СотрудникРегистратор,
//		|	аДокументооборотСостояниеДокументов.СостояниеДокумента КАК СостояниеДокумента
//		|ИЗ
//		|	Документ.аДокументооборотКорпоративныйДокумент КАК аДокументооборотКорпоративныйДокумент
//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Pcru_ТекущийИсполнительПоДокументу КАК Pcru_ТекущийИсполнительПоДокументу
//		|             ПО Pcru_ТекущийИсполнительПоДокументу.Документ = аДокументооборотКорпоративныйДокумент.Ссылка
//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.аДокументооборотСостояниеДокументов КАК аДокументооборотСостояниеДокументов
//		|		      ПО (аДокументооборотСостояниеДокументов.КорпоративныйДокумент = аДокументооборотКорпоративныйДокумент.Ссылка)
//		
//		|ГДЕ";
//	
//	
//		
//	КонецЕсли;	
//	
//	ПервоеУсловие=Истина;
//	Для Каждого ЭлементСтруктуры Из СтруктураОтборов Цикл 
//		ИмяОтбора=ЭлементСтруктуры.Ключ;
//		Если ИмяОтбора="ДатаРегистрации" Тогда
//			Продолжить;
//		КонецЕсли;
//		
//		Если Найти(ИмяОтбора, "Критерий")>0 Тогда
//			Продолжить; //используется в критерии, а не в условии ГДЕ
//		КонецЕсли;
//		
//		ЗначениеОтбора=ЭлементСтруктуры.Значение;
//		
//		Если НЕ ПервоеУсловие Тогда
//			Если ИмяОтбора<>"СостояниеДокумента" Тогда
//				ТекстЗапроса=ТекстЗапроса+" И аДокументооборотКорпоративныйДокумент."+ИмяОтбора+"=&"+ИмяОтбора;
//			Иначе
//				ТекстЗапроса=ТекстЗапроса+" И аДокументооборотСостояниеДокументов."+ИмяОтбора+"=&"+ИмяОтбора;
//			КонецЕсли;
//		Иначе			
//			Если ИмяОтбора<>"СостояниеДокумента" Тогда
//				ТекстЗапроса=ТекстЗапроса+"   аДокументооборотКорпоративныйДокумент."+ИмяОтбора+"=&"+ИмяОтбора;
//			Иначе
//				ТекстЗапроса=ТекстЗапроса+"   аДокументооборотСостояниеДокументов."+ИмяОтбора+"=&"+ИмяОтбора;
//			КонецЕсли;
//			ПервоеУсловие=Ложь;
//		КонецЕсли;
//		
//	КонецЦикла;
//	
//	Если Прав(ТекстЗапроса, 3)="ГДЕ" Тогда
//		ТекстЗапроса=Сред(ТекстЗапроса, 0, СтрДлина(ТекстЗапроса)-3);
//	КонецЕсли;
//	
//	
//	Попытка
//		Если Список.ТекстЗапроса<>ТекстЗапроса Тогда
//			Список.ТекстЗапроса=ТекстЗапроса;
//			pcru_ex_Почта.ОтправкаПочтыСтандарт("Запрс навигатора"+ ПараметрыСеанса.ТекущийПользователь,ТекстЗапроса);
//		КонецЕсли;
//	Исключение
//		аДООбщееСервер.СообщитьОбОшибке(ОписаниеОшибки());
//	КонецПопытки;	
//	
//КонецФункции

//&НаСервере
//Процедура Pcru_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
//	СтруктураОтборов=Новый Структура;
//	Если НЕ НеИспользоватьОборПоРежимуАрхива Тогда
//		СтруктураОтборов.Вставить("ДокументВАрхиве", РежимАрхивныхДокументов);	
//	КонецЕсли;
//	
//	PCRU_УстановитьТекстЗапросаПоСтруктуреОтборов(СтруктураОтборов)
//КонецПроцедуры

Процедура Pcru_ПриЗакрытииВместо(СтруктураРеквизитовПроцесса)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	аДокументооборотЗадача.Ссылка КАК Ссылка,
	|	аДокументооборотМатрицаЗаместителейСрезПоследних.Заместитель КАК Заместитель,
	|	аДокументооборотМатрицаЗаместителейСрезПоследних.ПричинаЗамены КАК ПричинаЗамены,
	|	аДокументооборотМатрицаЗаместителейСрезПоследних.Примечание КАК Примечание,
	|	аДокументооборотЗадача.ТочкаКБП КАК ТочкаКБП,
	|	аДокументооборотЗадача.Исполнитель КАК Исполнитель,
	|	аДокументооборотМатрицаЗаместителейСрезПоследних.Период КАК Период,
	|	аДокументооборотМатрицаЗаместителейСрезПоследних.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	РегистрСведений.аДокументооборотМатрицаЗаместителей.СрезПоследних(
	|			,
	|			&ТД <= ДатаОкончания
	|				И &ТД >= Период) КАК аДокументооборотМатрицаЗаместителейСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задача.аДокументооборотЗадача КАК аДокументооборотЗадача
	|		ПО аДокументооборотМатрицаЗаместителейСрезПоследних.ЗамещаемыйСотрудник = аДокументооборотЗадача.Исполнитель
	|			И (НЕ аДокументооборотЗадача.Выполнена)
	|ГДЕ
	|	аДокументооборотМатрицаЗаместителейСрезПоследних.ЗамещаемыйСотрудник <> аДокументооборотМатрицаЗаместителейСрезПоследних.Заместитель";
	Запрос.УстановитьПараметр("ТД",ТекущаяДата());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		УстановитьПривилегированныйРежим(Истина);
		Попытка
			НачатьТранзакцию();	
			Объект  =   Выборка.Ссылка.Получитьобъект();
			Объект.Исполнитель=Выборка.Заместитель;
			Объект.Записать();
			аДОЗадачиПроцессов.ЗафиксироватьЗаменуИсполнителяПереадресциейВТочкеВыборка(Выборка.ТочкаКБП, Выборка.Исполнитель, Выборка.Заместитель);
			//
			МЗ = РегистрыСведений.Pcru_ЗадачиПереадресованнвеПоМатрице.СоздатьМенеджерЗаписи();
			МЗ.Задача = Выборка.Ссылка;
			МЗ.ИсходныйИсполнитель = Выборка.Исполнитель;
			МЗ.ТекущийИсполнитель =  Выборка.Заместитель;
			МЗ.НачалоПериодаПереадресации = Выборка.Период;
			МЗ.ОкончаниеПериодаПереадресации = Выборка.ДатаОкончания;
			МЗ.Записать(Истина);
			//
			ЗафиксироватьТранзакцию();	
		Исключение
			ОтменитьТранзакцию();
			СтруктураРеквизитовПроцесса.ТекстСообщения =  СтруктураРеквизитовПроцесса.ТекстСообщения + ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Pcru_ЗадачиПереадресованнвеПоМатрице.Задача КАК Задача,
	|	Pcru_ЗадачиПереадресованнвеПоМатрице.Задача.ТочкаКБП КАК ТочкаКБП,
	|	Pcru_ЗадачиПереадресованнвеПоМатрице.ИсходныйИсполнитель КАК ИсходныйИсполнитель,
	|	Pcru_ЗадачиПереадресованнвеПоМатрице.ТекущийИсполнитель КАК ТекущийИсполнитель
	|ИЗ
	|	РегистрСведений.Pcru_ЗадачиПереадресованнвеПоМатрице КАК Pcru_ЗадачиПереадресованнвеПоМатрице
	|ГДЕ
	|	Pcru_ЗадачиПереадресованнвеПоМатрице.ОкончаниеПериодаПереадресации > &ТекДата
	|	И НЕ Pcru_ЗадачиПереадресованнвеПоМатрице.Задача.Выполнена";
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		УстановитьПривилегированныйРежим(Истина);
		Попытка
			НачатьТранзакцию();	
			Объект  =   Выборка.Ссылка.Получитьобъект();
			Объект.Исполнитель=Выборка.ИсходныйИсполнитель;
			Объект.Записать();
			аДОЗадачиПроцессов.ЗафиксироватьЗаменуИсполнителяПереадресциейВТочкеВыборка(Выборка.ТочкаКБП, Выборка.ТекущийИсполнитель, Выборка.ИсходныйИсполнитель);
			МЗ = РегистрыСведений.Pcru_ЗадачиПереадресованнвеПоМатрице.СоздатьМенеджерЗаписи();
			МЗ.Задача = Выборка.Ссылка;
			МЗ.Прочитать();
			МЗ.Удалить();
			//
			ЗафиксироватьТранзакцию();	
		Исключение
			ОтменитьТранзакцию();
			СтруктураРеквизитовПроцесса.ТекстСообщения =  СтруктураРеквизитовПроцесса.ТекстСообщения + ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Pcru_ЗадачиПереадресованнвеПоМатрице.Задача КАК Задача
	| ИЗ
	|	РегистрСведений.Pcru_ЗадачиПереадресованнвеПоМатрице КАК Pcru_ЗадачиПереадресованнвеПоМатрице
	|ГДЕ
	|	 Pcru_ЗадачиПереадресованнвеПоМатрице.Задача.Выполнена";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		УстановитьПривилегированныйРежим(Истина);
		Попытка
			НачатьТранзакцию();	
			//
			МЗ = РегистрыСведений.Pcru_ЗадачиПереадресованнвеПоМатрице.СоздатьМенеджерЗаписи();
			МЗ.Задача = Выборка.Ссылка;
			МЗ.Прочитать();
			МЗ.Удалить();
			//
			ЗафиксироватьТранзакцию();	
		Исключение
			ОтменитьТранзакцию();
			СтруктураРеквизитовПроцесса.ТекстСообщения =  СтруктураРеквизитовПроцесса.ТекстСообщения + ОписаниеОшибки();
		КонецПопытки;
		
		
	КонецЦикла;
	
	
КонецПроцедуры





